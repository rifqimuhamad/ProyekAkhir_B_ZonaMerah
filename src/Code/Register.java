/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Code;
import AppPackage.AnimationClass;import Code.Pengguna.Utama;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
/**
 *
 * @author Kintan Khairunnisa(1402019052)
 * @author Muhammad Rizky Yuhari(1402019075)
 * @author Rangga Pujangga(1402019090)
 * @author Muhamad Rifqi(1402019058)

 */
public class Register extends javax.swing.JFrame {
        AnimationClass gEraks = new AnimationClass();
        Random rnd = new Random();

    /**
     * Creates new form Login
     */
    public Register() {
        initComponents();
        slideShow();
        
    }
    private void apa_Kosong(){
        varPass.setText(null);
        varNama.setText(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Tampung = new javax.swing.JPanel();
        Kiri = new javax.swing.JPanel();
        iMG1 = new javax.swing.JLabel();
        iMG2 = new javax.swing.JLabel();
        iMG3 = new javax.swing.JLabel();
        Kanan = new javax.swing.JPanel();
        nama = new javax.swing.JLabel();
        ErrorName = new javax.swing.JLabel();
        varNama = new javax.swing.JTextField();
        batasUser = new javax.swing.JSeparator();
        user = new javax.swing.JLabel();
        ErrorUser = new javax.swing.JLabel();
        varUser = new javax.swing.JTextField();
        batasUser2 = new javax.swing.JSeparator();
        email = new javax.swing.JLabel();
        ErrorEmail = new javax.swing.JLabel();
        varEmail = new javax.swing.JTextField();
        batasUser1 = new javax.swing.JSeparator();
        lLogin = new javax.swing.JLabel();
        ErrorPass = new javax.swing.JLabel();
        batasPass = new javax.swing.JSeparator();
        varPass = new javax.swing.JPasswordField();
        btnLogin = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        Generate = new javax.swing.JButton();
        punyaAkun = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.CardLayout());

        Tampung.setBackground(new java.awt.Color(255, 255, 255));
        Tampung.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Kiri.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        iMG1.setBackground(new java.awt.Color(255, 255, 255));
        iMG1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/image.jpg"))); // NOI18N
        Kiri.add(iMG1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 500, 520));

        iMG2.setBackground(new java.awt.Color(255, 255, 255));
        iMG2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/0qf9fy4j-500x500.jpg"))); // NOI18N
        Kiri.add(iMG2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, -1));

        iMG3.setBackground(new java.awt.Color(255, 255, 255));
        iMG3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iphone-x-lcd-display-with-touch-screen-500x500.jpg"))); // NOI18N
        Kiri.add(iMG3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        Tampung.add(Kiri, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 500));

        Kanan.setBackground(new java.awt.Color(32, 33, 35));
        Kanan.setForeground(new java.awt.Color(32, 33, 35));
        Kanan.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        nama.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nama.setForeground(new java.awt.Color(57, 95, 172));
        nama.setText("Nama Lengkap");
        Kanan.add(nama, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, -1, -1));

        ErrorName.setForeground(new java.awt.Color(255, 0, 0));
        Kanan.add(ErrorName, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 350, 20));

        varNama.setBackground(new java.awt.Color(32, 33, 35));
        varNama.setForeground(new java.awt.Color(255, 255, 255));
        varNama.setBorder(null);
        varNama.setCaretColor(new java.awt.Color(255, 255, 255));
        varNama.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                varNamaFocusGained(evt);
            }
        });
        varNama.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                varNamaKeyReleased(evt);
            }
        });
        Kanan.add(varNama, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, 350, 30));

        batasUser.setForeground(new java.awt.Color(57, 113, 177));
        Kanan.add(batasUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, 350, -1));

        user.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        user.setForeground(new java.awt.Color(57, 95, 172));
        user.setText("Username");
        Kanan.add(user, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 140, -1, -1));

        ErrorUser.setForeground(new java.awt.Color(255, 0, 0));
        Kanan.add(ErrorUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 210, 350, 20));

        varUser.setBackground(new java.awt.Color(32, 33, 35));
        varUser.setForeground(new java.awt.Color(255, 255, 255));
        varUser.setBorder(null);
        varUser.setCaretColor(new java.awt.Color(255, 255, 255));
        varUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                varUserKeyReleased(evt);
            }
        });
        Kanan.add(varUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 170, 350, 30));

        batasUser2.setForeground(new java.awt.Color(57, 113, 177));
        Kanan.add(batasUser2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 200, 350, -1));

        email.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        email.setForeground(new java.awt.Color(57, 95, 172));
        email.setText("Email");
        Kanan.add(email, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 230, -1, -1));

        ErrorEmail.setForeground(new java.awt.Color(255, 0, 0));
        Kanan.add(ErrorEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 300, 350, 20));

        varEmail.setBackground(new java.awt.Color(32, 33, 35));
        varEmail.setForeground(new java.awt.Color(255, 255, 255));
        varEmail.setBorder(null);
        varEmail.setCaretColor(new java.awt.Color(255, 255, 255));
        varEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                varEmailFocusGained(evt);
            }
        });
        varEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                varEmailKeyReleased(evt);
            }
        });
        Kanan.add(varEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, 350, 30));

        batasUser1.setForeground(new java.awt.Color(57, 113, 177));
        Kanan.add(batasUser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 290, 350, -1));

        lLogin.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lLogin.setForeground(new java.awt.Color(57, 95, 172));
        lLogin.setText("Password");
        Kanan.add(lLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 320, -1, -1));

        ErrorPass.setForeground(new java.awt.Color(255, 0, 0));
        Kanan.add(ErrorPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 390, 350, 20));
        Kanan.add(batasPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 380, 350, -1));

        varPass.setBackground(new java.awt.Color(32, 33, 35));
        varPass.setForeground(new java.awt.Color(255, 255, 255));
        varPass.setBorder(null);
        varPass.setCaretColor(new java.awt.Color(255, 255, 255));
        varPass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                varPassFocusGained(evt);
            }
        });
        varPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                varPassKeyReleased(evt);
            }
        });
        Kanan.add(varPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 350, 310, 30));

        btnLogin.setBackground(new java.awt.Color(57, 95, 172));
        btnLogin.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        btnLogin.setForeground(new java.awt.Color(255, 255, 255));
        btnLogin.setText("Sign Up");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });
        Kanan.add(btnLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 440, 350, 50));

        jRadioButton1.setBackground(new java.awt.Color(0, 0, 0));
        jRadioButton1.setContentAreaFilled(false);
        jRadioButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/view.png"))); // NOI18N
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });
        Kanan.add(jRadioButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 351, -1, 30));

        Generate.setForeground(new java.awt.Color(255, 255, 255));
        Generate.setText("Generate");
        Generate.setContentAreaFilled(false);
        Generate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerateActionPerformed(evt);
            }
        });
        Kanan.add(Generate, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 360, 80, -1));

        punyaAkun.setForeground(new java.awt.Color(255, 255, 255));
        punyaAkun.setText("Sudah punya akun kan,Yuk Login");
        punyaAkun.setContentAreaFilled(false);
        punyaAkun.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        punyaAkun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                punyaAkunActionPerformed(evt);
            }
        });
        Kanan.add(punyaAkun, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 410, -1, -1));

        Tampung.add(Kanan, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 0, 500, 500));

        getContentPane().add(Tampung, "card2");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void varNamaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_varNamaFocusGained

    }//GEN-LAST:event_varNamaFocusGained

    private void varPassFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_varPassFocusGained

    }//GEN-LAST:event_varPassFocusGained

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        String inNama = varNama.getText();
        String inUser = varUser.getText();
        String inEmail = varEmail.getText();
        String inPass = varPass.getText();
        String inPengguna = "Pengguna";
       
        if (cekNama && cekPassword && cekUsername && cekEmail) {
            try{
                String sql = "INSERT INTO user VALUES (id,'"+inNama+"','"+inUser+"','"+inEmail+"','0','0','0','"+inPass+"','"+inPengguna+"')";
                java.sql.Connection conn = (Connection)Penghubung.configDB();
                java.sql.PreparedStatement pstm = conn.prepareStatement(sql);
                pstm.execute();
                JOptionPane.showMessageDialog(null, "Yuhuuu proses registrasi berhasil, salam kenal yah","Kuy Sekarang Login",JOptionPane.INFORMATION_MESSAGE);
                new Login().setVisible(true);
                dispose();
                

            }catch(HeadlessException | SQLException e){
                JOptionPane.showMessageDialog(this, " Maaf nih, data yang kamu masukan ada yang ga sesuai, coba cek lagi ya ");
            }
        }else{
            JOptionPane.showMessageDialog(null, "Masih ada data yang tidak valid nih, Yuk di cek lagi","Check Kembali",JOptionPane.ERROR_MESSAGE);
            //

        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void varEmailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_varEmailFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_varEmailFocusGained

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
        if(jRadioButton1.isSelected()){
            varPass.setEchoChar((char)0);
        }else{
            varPass.setEchoChar('*');
        }
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void varUserKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_varUserKeyReleased
        // TODO add your handling code here:

        StringBuilder salt = new StringBuilder();
        int random = 1 + rnd.nextInt(3);
//        String[] username = new String[3];
        String PATTERN = "^[a-zA-Z0-9._%-]+$";
        if (varUser.getText().isEmpty()) {
            ErrorUser.setText("Username Harus diisi Sob!");
            cekUsername = false;
        } else if (varUser.getText().matches(PATTERN) && !varUser.getText().isEmpty()) {
            ErrorUser.setText("");
            cekUsername = true;
            if (cekUsername(varUser.getText())) {
                    while (salt.length() < random) { // length of the random string.
                        int index = (int) (rnd.nextFloat() * RegexUser().length());
                       salt.append(RegexUser().charAt(index));
                    }
                ErrorUser.setText("Username Sudah ada Rekomendasi :" + varUser.getText()+salt);
                cekUsername = false;
            } else {
                ErrorUser.setText("");
            }
        } else {
            ErrorUser.setText("Username ngga valid Sob");
            cekUsername = false;
        }
    }//GEN-LAST:event_varUserKeyReleased

    private void varNamaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_varNamaKeyReleased
        // TODO add your handling code here:
        String PATTERN = "[A-Za-z]+";
        String nama = varNama.getText().replaceAll(" ", "");
        if (nama.isEmpty()) {
            ErrorName.setText("Nama harus diisi!");
            cekNama = false;
        } else if (!nama.matches(PATTERN)) {
            ErrorName.setText("Nama tidak valid");
            cekNama = false;
        } else {
            ErrorName.setText("");
            cekNama = true;
        }
    }//GEN-LAST:event_varNamaKeyReleased

    private void varEmailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_varEmailKeyReleased
        // TODO add your handling code here:
        StringBuilder salt = new StringBuilder();
        int random = 1 + rnd.nextInt(3);
        String PATTERN = "^[a-zA-Z0-9._%-]+@([a-zA-Z]{2,5})+(\\.[a-z]{2,5})+$";
        if (varEmail.getText().isEmpty()) {
            ErrorEmail.setText("Email Harus diisi Sob!");
            cekEmail = false;
        } else if (varEmail.getText().matches(PATTERN) && !varEmail.getText().isEmpty()) {
            ErrorEmail.setText("");
            cekEmail = true;
            if (cekEmail(varEmail.getText())) {
                while (salt.length() < random) { // length of the random string.
                        int index = (int) (rnd.nextFloat() * RegexEmail().length());
                       salt.append(RegexEmail().charAt(index));
                    }
                ErrorEmail.setText("Email Sudah ada Rekomendasi :" + salt + varEmail.getText());
                cekEmail = false;
            } else {
                ErrorEmail.setText("");
            }
        } else {
            ErrorEmail.setText("Email ngga valid Sob");
            cekEmail = false;
        }
    }//GEN-LAST:event_varEmailKeyReleased

    private void varPassKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_varPassKeyReleased
        // TODO add your handling code here:
        String PATTERN = "[a-zA-Z0-9!@#$%&]+";
        if (varPass.getText().isEmpty()) {
            ErrorPass.setText("Password Harus diisi Sob!");
            cekPassword = false;
        } else if (varPass.getText().matches(PATTERN) && !varPass.getText().isEmpty()) {
            if (varPass.getText().length() < 8) {
                ErrorPass.setText("Passowrd terlalu singkat");
                cekPassword = false;
            } else if (varPass.getText().length() > 12) {
                ErrorPass.setText("Passowrd terlalu Panjang");
                cekPassword = false;
            } else {
                ErrorPass.setText("");
                cekPassword = true;
            }
        } else {
            ErrorPass.setText("Password ngga valid Sob");
            cekPassword = false;
        }
    }//GEN-LAST:event_varPassKeyReleased

    private void GenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerateActionPerformed
        // TODO add your handling code here:
        int rands = rnd.nextInt(5)+8;
	StringBuilder sb = new StringBuilder(rands);
	for (int i = 1; i <= rands; i++){
            sb.append(RegexPass().charAt(rnd.nextInt(RegexPass().length())));
        }        
        varPass.setText(sb.toString());
        StringSelection stringSelection = new StringSelection(varPass.getText());
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        clipboard.setContents(stringSelection, null);
        String PATTERN = "[a-zA-Z0-9!@#$%&]+";
        if (varPass.getText().isEmpty()) {
            ErrorPass.setText("Password Harus diisi Sob!");
            cekPassword = false;
        } else if (varPass.getText().matches(PATTERN) && !varPass.getText().isEmpty()) {
            if (varPass.getText().length() < 8) {
                ErrorPass.setText("Passowrd terlalu singkat");
                cekPassword = false;
            } else if (varPass.getText().length() > 12) {
                ErrorPass.setText("Passowrd terlalu Panjang");
                cekPassword = false;
            } else {
                ErrorPass.setText("");
                cekPassword = true;
            }
        } else {
            ErrorPass.setText("Password Lu ngga valid Sob");
            cekPassword = false;
        }
    }//GEN-LAST:event_GenerateActionPerformed

    private void punyaAkunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_punyaAkunActionPerformed
        Login log = new Login();
        log.setVisible(true);
        log.setLocationRelativeTo(null);
        log.setDefaultCloseOperation(log.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_punyaAkunActionPerformed
    public boolean cekEmail(String varEmail) { //Cek email kalo udh ada
        PreparedStatement conf;
        ResultSet res;
        boolean cekEmail = false;
        String query = "SELECT * FROM user WHERE email =?";
        try {
            conf = Penghubung.configDB().prepareStatement(query);
            conf.setString(1, varEmail);
            res = conf.executeQuery();

            if (res.next()) {
                cekEmail = true;
            }
        } catch (SQLException ex) {
            Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
        }
        return cekEmail;
    }
    public boolean cekUsername(String varUser) { //Cek username kalo udh ada
        PreparedStatement conf1;
        ResultSet ress;
        boolean cekUsername = false;
        String query = "SELECT * FROM user WHERE username =?";
        try {
            conf1 = Penghubung.configDB().prepareStatement(query);
            conf1.setString(1, varUser);
            ress = conf1.executeQuery();

            if (ress.next()) {
                cekUsername = true;
            }
        } catch (SQLException ex) {
            Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
        }
        return cekUsername;
    }
    /**
     * @param args the command line arguments
     */
    public void slideShow() {
        new Thread(new Runnable() {
            @Override
            public void run() {
                
                int i = 0;            
                try {
                    while(true) { // infinity loop
                        switch(i) {
                            case 0: // gambar 1 akan bergeser ke gambar 2. 1 -> 2.
                                Thread.sleep(5000); // akan berlangsung 5 detik, 5000ms == 5d
                                gEraks.jLabelXLeft(0, -500, 12, 10, iMG1);
                                gEraks.jLabelXLeft(500, 0, 12, 10, iMG2);
                                gEraks.jLabelXLeft(1000, 500, 12, 10, iMG3);
                                i++;
                            case 1:
                                Thread.sleep(5000); // gambar 2 akan bergeser ke gambar 3. 2 -> 3.
                                gEraks.jLabelXLeft(-500, -1000, 12, 10, iMG1); // akan berlangsung 5 detik, 5000ms == 5d
                                gEraks.jLabelXLeft(0, -500, 12, 10, iMG2);
                                gEraks.jLabelXLeft(500, 0, 12, 10, iMG3);
                                i++;
                            case 2: // gambar 2 akan bergeser ke gambar 3. 2 -> 3.
                                Thread.sleep(5000); // akan berlangsung 5 detik, 5000ms == 5d
                                gEraks.jLabelXLeft(-1000, -500, 12, 10, iMG1);
                                gEraks.jLabelXLeft(-500, 0, 12, 10, iMG2);
                                gEraks.jLabelXLeft(0, 500, 12, 10, iMG3);
                                i++;
                            case 3: // gambar 3 akan bergeser kembali ke gambar 2. 3 -> 2.
                                Thread.sleep(5000); // akan berlangsung 5 detik, 5000ms == 5d
                                gEraks.jLabelXRight(-500, 0, 12, 10, iMG1);
                                gEraks.jLabelXRight(0, 500, 12, 10, iMG2);
                                gEraks.jLabelXRight(500, 1000, 12, 10, iMG3);
                                i=0;
                            
                        }
                    }
                }catch(Exception e) {}
            }
        }).start();
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Register().setVisible(true);
            }
        });
    }
    private String RegexUser(){
        String number = "0123456789";
        return number;
    } 
    private String RegexPass(){
        String number = "0123456789";
        return number;
    }   
    private String RegexEmail(){
        String chars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghi"+"jklmnopqrstuvwxyz";
        return chars;
    }
    boolean cekNama = false;
    boolean cekPassword = false;
    boolean cekUsername = false;
    boolean cekEmail = false;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ErrorEmail;
    private javax.swing.JLabel ErrorName;
    private javax.swing.JLabel ErrorPass;
    private javax.swing.JLabel ErrorUser;
    private javax.swing.JButton Generate;
    private javax.swing.JPanel Kanan;
    private javax.swing.JPanel Kiri;
    private javax.swing.JPanel Tampung;
    private javax.swing.JSeparator batasPass;
    private javax.swing.JSeparator batasUser;
    private javax.swing.JSeparator batasUser1;
    private javax.swing.JSeparator batasUser2;
    private javax.swing.JButton btnLogin;
    private javax.swing.JLabel email;
    public static javax.swing.JLabel iMG1;
    public static javax.swing.JLabel iMG2;
    public static javax.swing.JLabel iMG3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JLabel lLogin;
    private javax.swing.JLabel nama;
    private javax.swing.JButton punyaAkun;
    private javax.swing.JLabel user;
    private javax.swing.JTextField varEmail;
    private javax.swing.JTextField varNama;
    private javax.swing.JPasswordField varPass;
    private javax.swing.JTextField varUser;
    // End of variables declaration//GEN-END:variables
}
